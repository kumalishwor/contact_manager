{"version":3,"sources":["logo.svg","context.js","Components/layout/Header.js","Components/contacts/Contact.js","Components/contacts/Contacts.js","Components/layout/TextInputGroup.js","Components/contacts/AddContact.js","Components/contacts/EditContact.js","Components/pages/About.js","Components/pages/NotFound.js","Components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","res","this","data","value","props","children","Component","Consumer","Header","branding","className","href","to","defaultProps","Contact","showContactInfo","onShowClick","e","onDeleteClick","a","delete","name","style","cursor","onClick","float","color","bind","marginRight","email","phone","Contacts","Fragment","key","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","AddContact","errors","onSubmit","preventDefault","newContact","post","history","push","console","log","target","EditContact","updContact","match","params","put","About","NotFound","class","aria-hidden","Test","title","body","posts","fetch","then","response","json","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.21d15d08.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"DELETE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          (contact) => contact.id !== action.payload\r\n        ),\r\n      };\r\n    case \"ADD_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts],\r\n      };\r\n    case \"UPDATE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map((contact) =>\r\n          contact.id === action.payload.id\r\n            ? (contact = action.payload)\r\n            : contact\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [],\r\n    dispatch: (action) => {\r\n      this.setState((state) => reducer(state, action));\r\n    },\r\n  };\r\n\r\n  // componentDidMount() {\r\n  //   axios\r\n  //     .get(\"https://jsonplaceholder.typicode.com/users\")\r\n  //     .then((res) => this.setState({ contacts: res.data }));\r\n  // }\r\n\r\n  async componentDidMount() {\r\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\r\n\r\n    this.setState({ contacts: res.data });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n  const { branding } = props;\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n      <div className=\"container\">\r\n        <a href=\"/\" className=\"navbar-brand\">\r\n          {branding}\r\n        </a>\r\n        <div>\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n                <i className=\"fa fa-home\" />\r\n                &nbsp; Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/about\" className=\"nav-link\">\r\n                <i className=\"fa fa-question\" />\r\n                &nbsp; About\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/contact/add\" className=\"nav-link\">\r\n                <i className=\"fa fa-plus\" />\r\n                &nbsp; Create New\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  branding: \"My App\",\r\n};\r\n\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired,\r\n};\r\n\r\n// const headingStyle = {\r\n//     color: 'green',\r\n//     fontSize: 50,\r\n//     fontFamily: 'comic sans ms'\r\n// }\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Consumer } from \"../../context\";\r\nimport axios from \"axios\";\r\n\r\n// import './contact.css';\r\n\r\nclass Contact extends Component {\r\n  //   static propTypes = {\r\n  //     name: PropTypes.string.isRequired,\r\n  //     email: PropTypes.string.isRequired,\r\n  //     phone: PropTypes.string.isRequired,\r\n  //   };\r\n\r\n  // onShowClick() {\r\n  //   console.log();\r\n  // }\r\n  state = {\r\n    showContactInfo: false,\r\n  };\r\n\r\n  onShowClick = (e) => {\r\n    this.setState({\r\n      showContactInfo: !this.state.showContactInfo,\r\n    });\r\n  };\r\n\r\n  // onDeleteClick = (id, dispatch) => {\r\n  //   axios\r\n  //     .delete(`https://jsonplaceholder.typicode.com/users/${id}`)\r\n  //     .then((res) => dispatch({ type: \"DELETE_CONTACT\", payload: id }));\r\n  // };\r\n\r\n  onDeleteClick = async (id, dispatch) => {\r\n    try {\r\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n    } catch (e) {\r\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n    }\r\n\r\n    // const res = await axios.delete(\r\n    //   `https://jsonplaceholder.typicode.com/users/${id}`\r\n    // );\r\n\r\n    dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n  };\r\n\r\n  render() {\r\n    // const { name, email, phone } = this.props;\r\n    const { contact } = this.props;\r\n\r\n    const { showContactInfo } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n              <h4>\r\n                {contact.name}{\" \"}\r\n                <i\r\n                  style={{ cursor: \"pointer\" }}\r\n                  onClick={this.onShowClick}\r\n                  className=\"fa fa-sort-down\"\r\n                />\r\n                <i\r\n                  className=\"fa fa-times\"\r\n                  style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\r\n                  onClick={this.onDeleteClick.bind(this, contact.id, dispatch)}\r\n                />\r\n                <Link to={`contact/edit/${contact.id}`}>\r\n                  <i\r\n                    className=\"fa fa-pencil\"\r\n                    style={{\r\n                      cursor: \"pointer\",\r\n                      float: \"right\",\r\n                      color: \"black\",\r\n                      marginRight: \"1rem\",\r\n                    }}\r\n                  ></i>\r\n                </Link>\r\n              </h4>\r\n              {showContactInfo ? (\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">Email: {contact.email}</li>\r\n                  <li className=\"list-group-item\">Phone: {contact.phone}</li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\n// Contact.propTypes = {\r\n//   name: PropTypes.string.isRequired,\r\n//   email: PropTypes.string.isRequired,\r\n//   phone: PropTypes.string.isRequired,\r\n// };\r\n\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired,\r\n  // deleteClickHandler: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Contact;\r\n","import React, { Component } from \"react\";\r\nimport Contact from \"./Contact\";\r\nimport { Consumer } from \"../../context\";\r\n\r\nclass Contacts extends Component {\r\n  // deleteContact = (id) => {\r\n  //   const { contacts } = this.state;\r\n\r\n  //   const newContacts = contacts.filter((contact) => contact.id !== id);\r\n\r\n  //   this.setState({\r\n  //     contacts: newContacts,\r\n  //   });\r\n  // };\r\n\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { contacts } = value;\r\n          return (\r\n            <React.Fragment>\r\n              <h1 className=\"display-4 mb-2\">\r\n                <span className=\"text-danger\">Contact </span> List\r\n              </h1>\r\n              {contacts.map((contact) => (\r\n                <Contact key={contact.id} contact={contact} />\r\n              ))}\r\n            </React.Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n\r\nconst TextInputGroup = ({\r\n  label,\r\n  name,\r\n  value,\r\n  placeholder,\r\n  type,\r\n  onChange,\r\n  error,\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        type={type}\r\n        className={classnames(\"form-control form-control-lg\", {\r\n          \"is-invalid\": error,\r\n        })}\r\n        placeholder={placeholder}\r\n        name={name}\r\n        id={name}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  error: PropTypes.string,\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: \"text\",\r\n};\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport uuid from \"uuid\";\r\nimport axios from \"axios\";\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    id: \"\",\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {},\r\n  };\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n\r\n    const { name, email, phone } = this.state;\r\n\r\n    // Check For Errors\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is Required\" } });\r\n      return;\r\n    }\r\n\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email is Required\" } });\r\n      return;\r\n    }\r\n\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone is Required\" } });\r\n      return;\r\n    }\r\n\r\n    const newContact = {\r\n      name,\r\n      email,\r\n      phone,\r\n    };\r\n\r\n    // axios\r\n    //   .post(\"https://jsonplaceholder.typicode.com/users\", newContact)\r\n    //   .then((res) => dispatch({ type: \"ADD_CONTACT\", payload: newContact }));\r\n\r\n    const res = await axios.post(\r\n      \"https://jsonplaceholder.typicode.com/users\",\r\n      newContact\r\n    );\r\n\r\n    dispatch({ type: \"ADD_CONTACT\", payload: res.data });\r\n\r\n    // Clear State\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      contact: \"\",\r\n      errors: {},\r\n    });\r\n\r\n    this.props.history.push(\"/\");\r\n    console.log(this.state);\r\n  };\r\n\r\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Add Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    type=\"email\"\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Enter Email\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    type=\"number\"\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    name=\"submit\"\r\n                    type=\"submit\"\r\n                    value=\"Add Contact\"\r\n                    className=\"btn-block btn-danger\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContact;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport uuid from \"uuid\";\r\nimport axios from \"axios\";\r\n\r\nclass EditContact extends Component {\r\n  state = {\r\n    id: \"\",\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {},\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.get(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`\r\n    );\r\n\r\n    const contact = res.data;\r\n\r\n    this.setState({\r\n      name: contact.name,\r\n      email: contact.email,\r\n      phone: contact.phone,\r\n    });\r\n    console.log(id);\r\n  }\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n\r\n    const { name, email, phone } = this.state;\r\n\r\n    // Check For Errors\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is Required\" } });\r\n      return;\r\n    }\r\n\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email is Required\" } });\r\n      return;\r\n    }\r\n\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone is Required\" } });\r\n      return;\r\n    }\r\n\r\n    const updContact = {\r\n      name: name,\r\n      email: email,\r\n      phone: phone,\r\n    };\r\n\r\n    const { id } = this.props.match.params;\r\n\r\n    const res = await axios.put(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`,\r\n      updContact\r\n    );\r\n\r\n    dispatch({ type: \"UPDATE_CONTACT\", payload: res.data });\r\n\r\n    // Clear State\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {},\r\n    });\r\n\r\n    this.props.history.push(\"/\");\r\n    console.log(this.state);\r\n  };\r\n\r\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Edit Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    type=\"email\"\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Enter Email\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    type=\"text\"\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    name=\"submit\"\r\n                    type=\"submit\"\r\n                    value=\"Update Contact\"\r\n                    className=\"btn-block btn-danger\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditContact;\r\n","import React from \"react\";\r\n\r\nfunction About() {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">About Contact</h1>\r\n      <p className=\"lead\">Simple app to manage contacts</p>\r\n      <p className=\"text-secondary\">Version 1.0.0</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","import React from \"react\";\r\n\r\nfunction NotFound() {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">404 Page Not Found</h1>\r\n      <p className=\"lead\">\r\n        Sorry, that page does not{\" \"}\r\n        <i class=\"fa fa-fire-extinguisher\" aria-hidden=\"true\"></i>\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NotFound;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Test extends Component {\r\n  state = {\r\n    title: \"\",\r\n    body: \"\",\r\n    posts: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n      .then((response) => response.json())\r\n      .then((posts) =>\r\n        this.setState({\r\n          posts: posts,\r\n        })\r\n      );\r\n  }\r\n\r\n  //   componentWillMount() {\r\n  //     console.log(\"ComponentWillMount...\");\r\n  //   }\r\n\r\n  //   componentDidUpdate() {\r\n  //     console.log(\"ComponentDidUpdate...\");\r\n  //   }\r\n\r\n  //   componentWillUpdate() {\r\n  //     console.log(\"ComponentWillUpdate...\");\r\n  //   }\r\n\r\n  //   componentWillReceiveProps(nextProps, nextState) {\r\n  //     console.log(\"componentWillReceivedProps...\");\r\n  //   }\r\n\r\n  //   static getDerivedStateFromProps(nextProps, prevState) {\r\n  //     return null;\r\n  //   }\r\n\r\n  //   getSnapshotBeforeUpdate(prevProps, prevState) {\r\n  //     console.log(\"getSnapshotBeforeUpdate\");\r\n  //   }\r\n\r\n  render() {\r\n    const { title, body, posts } = this.state;\r\n    return (\r\n      <div>\r\n        {posts.map((post) => (\r\n          <ul>\r\n            <li className=\"text-danger\">\r\n              Id: ({post.id}) {post.title}\r\n            </li>\r\n            {post.body}\r\n          </ul>\r\n        ))}\r\n        {/* <h1>{title}</h1>\r\n        <p>{body}</p> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Test;\r\n","import React, { Component } from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\nimport { Provider } from \"./context\";\n\nimport Header from \"./Components/layout/Header\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Contacts from \"./Components/contacts/Contacts\";\nimport AddContact from \"./Components/contacts/AddContact\";\nimport EditContact from \"./Components/contacts/EditContact\";\nimport About from \"./Components/pages/About\";\nimport NotFound from \"./Components/pages/NotFound\";\nimport Test from \"./Components/test/Test\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/test\" component={Test} />\n                <Route component={NotFound} />\n              </Switch>\n              {/* <AddContact />\n              <Contacts /> */}\n            </div>\n            {/* <Contact\n          name=\"Ishwor kumal\"\n          email=\"Ishwor@gmail.com\"\n          phone=\"9814158530\"\n        />\n        <Contact\n          name=\"Kishor kumal\"\n          email=\"Kishor@gmail.com\"\n          phone=\"9814158456\"\n        />\n        <Contact name=\"Ajay kumal\" email=\"Ajay@gmail.com\" phone=\"9814158452\" /> */}\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}